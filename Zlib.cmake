Include (FindZLIB)
Set (ZLIB_RELEASE_NAMES z zlib1 zlib)
Set (ZLIB_DEBUG_NAMES z zlibd1 zlibd)

If (NOT ZLIB_INCLUDE_DIR)
	Find_Path (ZLIB_INCLUDE_DIR zlib.h PATHS $ENV{ZLIB_DIR} PATH_SUFFIXES include NO_DEFAULT_PATH)
	Get_Filename_Component (ZLIB_ROOT_DIR ${ZLIB_INCLUDE_DIR} PATH CACHE)
	If (ZLIB_INCLUDE_DIR)
		Find_Library (ZLIB_DEBUG_LIBRARIES 
			NAMES ${ZLIB_DEBUG_NAMES} PATHS ${ZLIB_ROOT_DIR} PATH_SUFFIXES lib
			NO_DEFAULT_PATH)
		Find_Library (ZLIB_RELEASE_LIBRARIES 
			NAMES ${ZLIB_RELEASE_NAMES} PATHS ${ZLIB_ROOT_DIR} PATH_SUFFIXES lib
			NO_DEFAULT_PATH)

		If (ZLIB_DEBUG_LIBRARIES AND ZLIB_RELEASE_LIBRARIES)
			Set (
				ZLIB_LIBRARY
				optimized ${ZLIB_RELEASE_LIBRARIES}
				debug ${ZLIB_DEBUG_LIBRARIES}
				CACHE STRING "Zlib Libraries" FORCE
				)
		ElseIf (ZLIB_DEBUG_LIBRARIES)
			Set (ZLIB_LIBRARY ${ZLIB_DEBUG_LIBRARIES}
				CACHE STRING "Zlib Libraries" FORCE)
		ElseIf (ZLIB_RELEASE_LIBRARIES)
			Set (ZLIB_LIBRARY ${ZLIB_RELEASE_LIBRARIES}
				CACHE STRING "Zlib Libraries" FORCE)
		EndIf (ZLIB_DEBUG_LIBRARIES AND ZLIB_RELEASE_LIBRARIES)

		Mark_As_Advanced (ZLIB_INCLUDE_DIR ZLIB_ROOT_DIR ZLIB_RELEASE_LIBRARIES
			ZLIB_DEBUG_LIBRARIES)
	EndIf (ZLIB_INCLUDE_DIR)
EndIf (NOT ZLIB_INCLUDE_DIR)

If (ZLIB_INCLUDE_DIR)
	Set (HAVE_ZLIB_H 1)
Else (ZLIB_INCLUDE_DIR)
	Set (HAVE_ZLIB_H 0)
EndIf (ZLIB_INCLUDE_DIR)
