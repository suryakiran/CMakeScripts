Find_Package (Git)

If (GIT_EXECUTABLE)
  Execute_Process (
    COMMAND ${GIT_EXECUTABLE} rev-parse --is-inside-work-tree
    WORKING_DIRECTORY ${CMAKE_SOURCE_DIR}
    RESULT_VARIABLE GIT_TREE_RESULT
    OUTPUT_VARIABLE GIT_TREE_OUTPUT
    ERROR_VARIABLE  GIT_TREE_ERROR
    OUTPUT_QUIET
    OUTPUT_STRIP_TRAILING_WHITESPACE
    ERROR_STRIP_TRAILING_WHITESPACE
    )

  If (GIT_TREE_RESULT)
    String (REGEX MATCH "Not a git repository" GIT_TREE_NOT_A_REPO
      ${GIT_TREE_ERROR})
  Else (GIT_TREE_RESULT)
    Execute_Process (
      COMMAND ${GIT_EXECUTABLE} symbolic-ref HEAD
      WORKING_DIRECTORY ${CMAKE_SOURCE_DIR}
      RESULT_VARIABLE GIT_CURRENT_BRANCH_RESULT
      OUTPUT_VARIABLE GIT_CURRENT_BRANCH_OUTPUT
      ERROR_VARIABLE  GIT_CURRENT_BRANCH_ERROR
      ERROR_QUIET
      OUTPUT_STRIP_TRAILING_WHITESPACE
      ERROR_STRIP_TRAILING_WHITESPACE
      )

    IF (NOT GIT_CURRENT_BRANCH_RESULT)
      String (REPLACE "refs/heads/" "" gcb ${GIT_CURRENT_BRANCH_OUTPUT})
      Set (GIT_CURRENT_BRANCH_NAME ${gcb} CACHE STRING "Current Git Branch Name Of Source Tree" FORCE)
      Mark_As_Advanced (GIT_CURRENT_BRANCH_NAME)
    EndIf (NOT GIT_CURRENT_BRANCH_RESULT)
  EndIf (GIT_TREE_RESULT)

EndIf (GIT_EXECUTABLE)
