Include (FindPythonInterp)
Include (FindPythonLibs)
Include_Directories (${PYTHON_INCLUDE_DIR})

If (NOT PYTHON_EXECUTABLE)
  Message (FATAL_ERROR "Unable to find Python. Please install Python and retry")
EndIf (NOT PYTHON_EXECUTABLE)

Macro (EXECUTE_PYTHON)
  PARSE_ARGUMENTS (EXECUTE_PYTHON
    "FILE;ARGS;CMAKE_OUTPUT;OUTPUT" "" ${ARGN})
  If (EXECUTE_PYTHON_FILE)

    If (EXECUTE_PYTHON_CMAKE_OUTPUT)
      List (APPEND EXECUTE_PYTHON_ARGS "-o")
      List (APPEND EXECUTE_PYTHON_ARGS ${EXECUTE_PYTHON_CMAKE_OUTPUT})
    EndIf (EXECUTE_PYTHON_CMAKE_OUTPUT)

    Execute_Process (
      COMMAND ${PYTHON_EXECUTABLE} ${EXECUTE_PYTHON_FILE} ${EXECUTE_PYTHON_ARGS}
      RESULT_VARIABLE EXECUTE_PYTHON_RESULT_VARIABLE
      OUTPUT_VARIABLE EXECUTE_PYTHON_OUTPUT_VARIABLE
      ERROR_VARIABLE  EXECUTE_PYTHON_ERROR_VARIABLE
      OUTPUT_STRIP_TRAILING_WHITESPACE
      ERROR_STRIP_TRAILING_WHITESPACE
      )

    If (EXECUTE_PYTHON_OUTPUT)
      Set (${EXECUTE_PYTHON_OUTPUT} ${EXECUTE_PYTHON_OUTPUT_VARIABLE} CACHE INTERNAL "Output From Python" FORCE)
    ElseIf (EXECUTE_PYTHON_OUTPUT_VARIABLE)
      Message (${EXECUTE_PYTHON_OUTPUT_VARIABLE})
    EndIf (EXECUTE_PYTHON_OUTPUT)

    If (EXECUTE_PYTHON_RESULT_VARIABLE)
      Message (${EXECUTE_PYTHON_ERROR_VARIABLE})
    ElseIf (EXECUTE_PYTHON_CMAKE_OUTPUT)
      Include (${EXECUTE_PYTHON_CMAKE_OUTPUT})
    EndIf (EXECUTE_PYTHON_RESULT_VARIABLE)

  EndIf (EXECUTE_PYTHON_FILE)
EndMacro (EXECUTE_PYTHON)

Function (CONFIGURE_EXECUTABLE_FILE p_from p_to)
  Configure_File(${p_from} ${p_to} ${ARGN})
  Execute_Python(FILE ${PY_COMMANDS_FILE} ARGS -c make_executable ${p_to})
EndFunction (CONFIGURE_EXECUTABLE_FILE)

Function (FIND_PYTHON_FILE)
  Find_File_In_Dir (${ARGN} ${CMAKE_PYTHON_DIR})
EndFunction (FIND_PYTHON_FILE)

Find_Python_File(PY_COMMANDS_FILE Commands.py)
Find_Python_File(PY_WRITE_EMACS_FILE WriteEmacsInit.py)
Find_Python_File(PY_WRITE_GVIM_FILE WriteGvimInit.py)
Find_Python_File(PY_TEST_FILE Test.py)
Find_Python_File(PY_WRITE_EDITOR_FILE WriteEditorFiles.py)
Find_Python_File(PY_FILE_PACKAGE_LIBRARY_DETAILS WritePackageLibraryDetails.py)
Find_Python_File(PY_FILE_GET_PROPERTIES WriteGetPropertiesFile.py)